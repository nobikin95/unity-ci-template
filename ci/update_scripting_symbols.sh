#!/bin/bash

PROJECT_SETTINGS_FILE="ProjectSettings/ProjectSettings.asset"

# Ki·ªÉm tra n·∫øu file kh√¥ng t·ªìn t·∫°i
if [[ ! -f "$PROJECT_SETTINGS_FILE" ]]; then
    echo "‚ùå Error: File $PROJECT_SETTINGS_FILE not found!"
    exit 1
fi

# Ph√¢n t√≠ch c√°c tham s·ªë d√≤ng l·ªánh
for arg in "$@"; do
    case $arg in
        --add_define_symbol=*)
            ADD_DEFINE_SYMBOLS="${arg#*=}"
            ;;
        --remove_define_symbol=*)
            REMOVE_DEFINE_SYMBOLS="${arg#*=}"
            ;;
        *)
            echo "Usage: $0 [--add_define_symbol=<symbols>] [--remove_define_symbol=<symbols>]"
            exit 1
            ;;
    esac
done

# Ki·ªÉm tra bi·∫øn ADD_DEFINE_SYMBOLS v√† REMOVE_DEFINE_SYMBOLS
if [[ -z "$ADD_DEFINE_SYMBOLS" ]]; then
    echo "‚ö†Ô∏è Warning: ADD_DEFINE_SYMBOLS is empty!"
else
    echo "‚úîÔ∏è ADD_DEFINE_SYMBOLS: $ADD_DEFINE_SYMBOLS"
fi

if [[ -z "$REMOVE_DEFINE_SYMBOLS" ]]; then
    echo "‚ö†Ô∏è Warning: REMOVE_DEFINE_SYMBOLS is empty!"
else
    echo "‚úîÔ∏è REMOVE_DEFINE_SYMBOLS: $REMOVE_DEFINE_SYMBOLS"
fi

# Chuy·ªÉn ƒë·ªïi bi·∫øn th√†nh m·∫£ng
IFS=',' read -r -a ADD_SYMBOLS <<< "$ADD_DEFINE_SYMBOLS"
IFS=',' read -r -a REMOVE_SYMBOLS <<< "$REMOVE_DEFINE_SYMBOLS"

echo "==== Updating Scripting Define Symbols ===="
echo "ProjectSettings File: $PROJECT_SETTINGS_FILE"
echo "-------------------------------------------"

# Sao l∆∞u file g·ªëc tr∆∞·ªõc khi ch·ªânh s·ª≠a
cp "$PROJECT_SETTINGS_FILE" "$PROJECT_SETTINGS_FILE.bak"

# Bi·∫øn l∆∞u n·ªôi dung m·ªõi c·ªßa file
UPDATED_CONTENT=""
IN_SCRIPTING_DEFINE_SYMBOLS=0
CHANGES_MADE=0

# ƒê·ªçc t·ª´ng d√≤ng c·ªßa file g·ªëc
while IFS= read -r line || [[ -n "$line" ]]; do
    # B·∫Øt ƒë·∫ßu ph·∫ßn scriptingDefineSymbols
    if echo "$line" | grep -qE '^[[:space:]]*scriptingDefineSymbols:'; then
        IN_SCRIPTING_DEFINE_SYMBOLS=1
        echo "[DEBUG] Found scriptingDefineSymbols section."
        UPDATED_CONTENT+="$line"$'\n'
        continue
    fi

    # N·∫øu ƒëang trong scriptingDefineSymbols v√† g·∫∑p additionalCompilerArguments, k·∫øt th√∫c ch·ªânh s·ª≠a
    if [[ $IN_SCRIPTING_DEFINE_SYMBOLS -eq 1 && $(echo "$line" | grep -E '^[[:space:]]*additionalCompilerArguments:') ]]; then
        IN_SCRIPTING_DEFINE_SYMBOLS=0
        echo "[DEBUG] End of scriptingDefineSymbols section."
    fi

    # N·∫øu ƒëang trong scriptingDefineSymbols v√† g·∫∑p m·ªôt n·ªÅn t·∫£ng
    if [[ $IN_SCRIPTING_DEFINE_SYMBOLS -eq 1 && $(echo "$line" | grep -E '^[[:space:]]{4}[A-Za-z0-9_]+:') ]]; then
        PLATFORM=$(echo "$line" | sed -E 's/^[[:space:]]{4}([^:]+):.*/\1/')
        SYMBOLS=$(echo "$line" | sed -E 's/.*: (.*)/\1/')

        # N·∫øu SYMBOLS l√† `{}` ho·∫∑c r·ªóng, gi·ªØ nguy√™n ƒë·ªÉ tr√°nh l√†m h·ªèng YAML
        if [[ "$SYMBOLS" == "{}" || -z "$SYMBOLS" ]]; then
            echo "[WARNING] $PLATFORM has no symbols defined, skipping..."
            UPDATED_CONTENT+="$line"$'\n'
            continue
        fi

        # Chuy·ªÉn ƒë·ªïi th√†nh m·∫£ng
        IFS=';' read -r -a SYMBOLS_ARRAY <<< "$SYMBOLS"

        # Th√™m c√°c symbols m·ªõi n·∫øu ch∆∞a c√≥
        for SYMBOL in "${ADD_SYMBOLS[@]}"; do
            if [[ -n "$SYMBOL" && ! " ${SYMBOLS_ARRAY[@]} " =~ " $SYMBOL " ]]; then
                SYMBOLS_ARRAY+=("$SYMBOL")
                echo "[DEBUG] Added: $SYMBOL to $PLATFORM"
                CHANGES_MADE=1
            fi
        done

        # X√≥a c√°c symbols c·∫ßn lo·∫°i b·ªè
        for REMOVE_SYMBOL in "${REMOVE_SYMBOLS[@]}"; do
            if [[ -n "$REMOVE_SYMBOL" && " ${SYMBOLS_ARRAY[@]} " =~ " $REMOVE_SYMBOL " ]]; then
                SYMBOLS_ARRAY=("${SYMBOLS_ARRAY[@]/$REMOVE_SYMBOL}")
                echo "[DEBUG] Removed: $REMOVE_SYMBOL from $PLATFORM"
                CHANGES_MADE=1
            fi
        done

        # Gh√©p l·∫°i th√†nh chu·ªói m·ªõi v·ªõi d·∫•u ";"
        NEW_SYMBOLS=$(IFS=';'; echo "${SYMBOLS_ARRAY[*]}")

        echo "[DEBUG] Updated $PLATFORM Symbols: $NEW_SYMBOLS"
        echo "-------------------------------------------"

        # C·∫≠p nh·∫≠t l·∫°i d√≤ng cho n·ªÅn t·∫£ng n√†y
        line="    $PLATFORM: $NEW_SYMBOLS"
    fi

    UPDATED_CONTENT+="$line"$'\n'
done < "$PROJECT_SETTINGS_FILE.bak"

# Ghi n·ªôi dung ƒë√£ ch·ªânh s·ª≠a v√†o file
echo "$UPDATED_CONTENT" > "$PROJECT_SETTINGS_FILE"

if [[ "$CHANGES_MADE" -eq 1 ]]; then
    echo "‚úÖ Update completed. Check logs for debugging."
else
    echo "‚ÑπÔ∏è No changes were made to scriptingDefineSymbols."
fi

echo "üîÑ Backup saved at: $PROJECT_SETTINGS_FILE.bak"
