default_platform(:android)

platform :android do
  desc "Upload AAB (and symbols) to Google Play Internal Test track and save the result to a file"
  lane :upload_internal do
    # Lấy đường dẫn đến file AAB từ biến môi trường
    aab_path = ENV["AAB_PATH"]
    unless aab_path && File.exist?(aab_path)
      UI.user_error!("AAB file not found at path: #{aab_path}")
    end

    # Lấy đường dẫn đến file symbols nếu có
    symbols_path = ENV["SYMBOLS_PATH"]
    if symbols_path && File.exist?(symbols_path)
      UI.message("Found symbols file at: #{symbols_path}")
    else
      UI.message("No symbols file provided. Continuing without symbols upload.")
      symbols_path = nil
    end

    # Gọi supply và capture kết quả trả về
    result = supply(
      aab: aab_path,
      track: "internal",
      package_name: ENV["GOOGLE_PLAY_PACKAGE_NAME"] || "com.example.app",
      json_key: ENV["GOOGLE_PLAY_JSON_KEY_PATH"] || "path/to/your/google-play-key.json",
      skip_upload_metadata: true,
      skip_upload_images: true,
      skip_upload_screenshots: true,
      mapping: symbols_path
    )

    # Lưu kết quả của supply vào file JSON
    require 'json'
    File.write("supply_result.json", JSON.pretty_generate({ "result" => result }))
    UI.message("The supply result has been saved to supply_result.json")

    # Kiểm tra kiểu dữ liệu của result trước khi truy cập cảnh báo
    if result.is_a?(Hash) && result["release_status"]
      release_status = result["release_status"]
      if release_status["warningMessages"] && !release_status["warningMessages"].empty?
        UI.important("Cảnh báo từ Google Play: #{release_status['warningMessages'].join(', ')}")
      else
        UI.message("Không có cảnh báo nào từ Google Play trong release_status.")
      end
    else
      UI.message("Upload thành công nhưng không có dữ liệu chi tiết từ Google Play (result: #{result}).")
    end
  end
end